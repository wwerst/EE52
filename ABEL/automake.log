ispLEVER Auto-Make Log File
---------------------------

Updating: Fit Design
Start to record tcl script...
Finished recording TCL script.

Starting: 'C:\ispLEVER_Classic1_7\ispcpld\BIN\ahdl2blf.exe "dram.abl" -vec -ovec "dram.tmv"  -def _PLSI_ _LATTICE_  -err automake.err -gui'

AHDL2BLF  ABEL-HDL Processor
ispLEVER Classic 1.7 Copyright(C), 1992-2005, Lattice Semiconductor Corporation. All rights reserved
Portions Copyright(c), 1992-1999, Vantis Corporation
Portions Copyright(C), 1993-1998, Data I/O Corporation
Portions Copyright(C), 1997-1998, MINC Washington Corporation
Portions Copyright(C), Alan Phillips, Lancaster University Computer Centre 1992-1998
Module: 'DRAM'

  Parsing test vectors...

Module 'dram' processing complete.

Using backup JHD file.
AHDL2BLF complete - 0 errors, 0 warnings. Time: 1 seconds

Done: completed successfully.

Starting: 'C:\ispLEVER_Classic1_7\ispcpld\BIN\syndos -batch copytmv '

Done: completed successfully.

Starting: 'C:\ispLEVER_Classic1_7\ispcpld\BIN\iblifopt.exe "DRAM.bl0" -red bypin choose -collapse -pterms 8 -family -err automake.err -gui'

BLIFOPT  Open-ABEL Optimizer 
ispLEVER Classic 1.7 Copyright(C), 1992-2005, Lattice Semiconductor Corporation. All rights reserved
Portions Copyright(c), 1992-1999, Vantis Corporation
Portions Copyright(C), 1993-1998, Data I/O Corporation
Portions Copyright(C), 1997-1998, MINC Washington Corporation
Portions Copyright(C), Alan Phillips, Lancaster University Computer Centre 1992-1998
U.C. Berkeley, SIS Ver. 1.0, supported by Lattice Semiconductor Corp.
Reading Open-ABEL 2 file DRAM.bl0...
Performing 'bypin choose' optimization...
Writing Open-ABEL 2 (BLIF) file DRAM.bl1...

BLIFOPT complete - 0 errors, 0 warnings. Time: 1 seconds

Done: completed successfully.

Starting: 'C:\ispLEVER_Classic1_7\ispcpld\BIN\iblflink.exe "DRAM.bl1" -o "pld.bl2" -omod DRAM -propadd -family PLSI -ues pld.ues -err automake.err -gui'

BLIFLINK  Top-Down Design Linker
ispLEVER Classic 1.7 Copyright(C), 1992-2005, Lattice Semiconductor Corporation. All rights reserved
Portions Copyright(c), 1992-1999, Vantis Corporation
Portions Copyright(C), 1993-1998, Data I/O Corporation
Portions Copyright(C), 1997-1998, MINC Washington Corporation
Portions Copyright(C), Alan Phillips, Lancaster University Computer Centre 1992-1998

Top-level file: 'DRAM.bl1'

Hierarchical BLIF: 'pld.bl2'

BLIFLINK complete.  Time: 1 second 

Done: completed successfully.

Starting: 'C:\ispLEVER_Classic1_7\ispcpld\BIN\iblifopt.exe pld.bl2 -red bypin choose -sweep -collapse all -pterms 8 -err automake.err -gui'

BLIFOPT  Open-ABEL Optimizer 
ispLEVER Classic 1.7 Copyright(C), 1992-2005, Lattice Semiconductor Corporation. All rights reserved
Portions Copyright(c), 1992-1999, Vantis Corporation
Portions Copyright(C), 1993-1998, Data I/O Corporation
Portions Copyright(C), 1997-1998, MINC Washington Corporation
Portions Copyright(C), Alan Phillips, Lancaster University Computer Centre 1992-1998
U.C. Berkeley, SIS Ver. 1.0, supported by Lattice Semiconductor Corp.
Reading Open-ABEL 2 file pld.bl2...
Performing 'bypin choose' optimization...
Writing Open-ABEL 2 (BLIF) file pld.bl3...

BLIFOPT complete - 0 errors, 0 warnings. Time: 1 seconds

Done: completed successfully.

Starting: 'C:\ispLEVER_Classic1_7\ispcpld\BIN\idiofft.exe -i pld.bl3 -o pld.tt2 -propadd -idev PLSI -dev pla_basic -pla -err automake.err -gui'

DIOFFT  Flip-Flop Transformation program
ispLEVER Classic 1.7 Copyright(C), 1992-2005, Lattice Semiconductor Corporation. All rights reserved
Portions Copyright(c), 1992-1999, Vantis Corporation
Portions Copyright(C), 1993-1998, Data I/O Corporation
Portions Copyright(C), 1997-1998, MINC Washington Corporation
Portions Copyright(C), Alan Phillips, Lancaster University Computer Centre 1992-1998
Input file: pld.bl3.
Output file: pld.tt2.
Cross reference file: pld.xrf.

.........
Shortening signal names...
Writing signal name cross reference file pld.xrf... 

DIOFFT complete. - Time 0 seconds

Done: completed successfully.

Starting: 'C:\ispLEVER_Classic1_7\ispcpld\BIN\syndpm.exe -i pld.tt2 -if pla -p ispLSI1016E-100LJ44 -pre -gui'

arg[0] = C:\ispLEVER_Classic1_7\ispcomp\bin\dpm.exe
arg[1] = -i
arg[2] = "C:\Documents and Settings\micro\My Documents\wwerst\EE52\ABEL\pld.tt2"
arg[3] = -if
arg[4] = pla
arg[5] = -p
arg[6] = ispLSI1016E-100LJ44
arg[7] = -pre
arg[8] = -s
arg[9] = d
arg[10] = -e
arg[11] = 2
arg[12] = -z
arg[13] = -m
arg[14] = 16
arg[15] = -n
arg[16] = 4
arg[17] = -ta
arg[18] = on
arg[19] = -y
arg[20] = "C:\Documents and Settings\micro\My Documents\wwerst\EE52\ABEL\PLD.xpn"
arg[21] = -r
arg[22] = "C:\Documents and Settings\micro\My Documents\wwerst\EE52\ABEL\ispxpert.par"
cmd line = C:\ispLEVER_Classic1_7\ispcomp\bin\dpm.exe -i "C:\Documents and Settings\micro\My Documents\wwerst\EE52\ABEL\pld.tt2" -if pla -p ispLSI1016E-100LJ44 -pre -s d -e 2 -z -m 16 -n 4 -ta on -y "C:\Documents and Settings\micro\My Documents\wwerst\EE52\ABEL\PLD.xpn" -r "C:\Documents and Settings\micro\My Documents\wwerst\EE52\ABEL\ispxpert.par" 
ispEXPERT Compiler Release 1.7.00.05.28.13, May 20 2002 13:06:40

Copyright (C) 1994-2000 by Lattice Semiconductor Corporation.
All Rights Reserved.


Design Process Management 

Renaming existing log file to pld.lo-
Renaming existing parameter file to pld.pa-
Renaming existing rpt file to pld.rp-

Preprocessing design 'pld'...


PLA Reading and Translation 
  
Reading design 'pld'... 
  
Checking design rules... 
  
Writing output files(ddf)... 
  
Writing output files(laf)... 
  
PLA reading and translation completed successfully 



Done: completed successfully.

Starting: 'C:\ispLEVER_Classic1_7\ispcomp\bin\impsrclever.exe -prj pld -log pld.irs -gui'

Done: completed successfully.

Starting: 'C:\ispLEVER_Classic1_7\ispcpld\BIN\syndpm.exe -i pld.laf -if laf -p ispLSI1016E-100LJ44 -pd "c:\documents and settings\micro\my documents\wwerst\ee52\abel" -gui -of vhdl -of verilog'

arg[0] = C:\ispLEVER_Classic1_7\ispcomp\bin\dpm.exe
arg[1] = -i
arg[2] = "c:\documents and settings\micro\my documents\wwerst\ee52\abel\pld.laf"
arg[3] = -if
arg[4] = laf
arg[5] = -p
arg[6] = ispLSI1016E-100LJ44
arg[7] = -of
arg[8] = vhdl
arg[9] = -of
arg[10] = verilog
arg[11] = -s
arg[12] = d
arg[13] = -e
arg[14] = 2
arg[15] = -z
arg[16] = -m
arg[17] = 16
arg[18] = -n
arg[19] = 4
arg[20] = -ta
arg[21] = on
arg[22] = -y
arg[23] = "c:\documents and settings\micro\my documents\wwerst\ee52\abel\PLD.xpn"
arg[24] = -r
arg[25] = "c:\documents and settings\micro\my documents\wwerst\ee52\abel\ispxpert.par"
cmd line = C:\ispLEVER_Classic1_7\ispcomp\bin\dpm.exe -i "c:\documents and settings\micro\my documents\wwerst\ee52\abel\pld.laf" -if laf -p ispLSI1016E-100LJ44 -of vhdl -of verilog -s d -e 2 -z -m 16 -n 4 -ta on -y "c:\documents and settings\micro\my documents\wwerst\ee52\abel\PLD.xpn" -r "c:\documents and settings\micro\my documents\wwerst\ee52\abel\ispxpert.par" 
ispEXPERT Compiler Release 1.7.00.05.28.13, May 20 2002 13:06:40

Copyright (C) 1994-2000 by Lattice Semiconductor Corporation.
All Rights Reserved.


Design Process Management 

Renaming existing log file to pld.lo-
Renaming existing rpt file to pld.rp-

Preprocessing design 'pld'...

Processing design 'pld'...


Logical LAF Reading and Translation 
  
Reading file 'c:\documents and settings\micro\my 
      documents\wwerst\ee52\abel\pld.laf'... 
  
Checking design rules... 
Selected part is 'ispLSI1016E-100LJ44' 
  
Writing output files... 
  
Logical LAF reading and translation completed successfully 


Synthesis and Partitioning 
  
Reading design 'pld'... 
  
Optimizing logic... 
  
Trying to move PT reset signal to global reset pin... 
      PT reset signal cannot be moved to global reset pin 
      In order to move PT reset signal to global reset pin, the 
      following conditions need to be satisfied: 
      1. There exists at least one pin which drives all register's reset
      signals 
      2. This pin is unlocked 
      3. This pin does not drive any data signals 
      4. This pin can be disjointly decomposed with other pins, if any, 
      which drive reset signals 
33524 WARNING: Signal 'REFINPROGRESS' drives output pin 'REFINPROGRESS' 
      and IOC register 'REFINPROGRESSDELAY' without a bidirectional 
      buffer; bidirectional buffer is inserted 
  
Partitioning logic into 16-input, 16-input with DIs, functions to 
      minimize delay... 
  
Extracting LXOR2 gates to minimize delay... 
  
Packing functions into GLBs using 16 inputs and 4 outputs per GLB to 
      minimize delay... 
Constant VCC drives register 'REFRQST' data input 
  
Synthesis and partitioning statistics: 
  
Number of Macrocells is 17 
Number of GLBs is 6 
Number of product terms is 57 
Maximum number of GLB levels is 1 
Average number of inputs per GLB is 7.7 
Average number of outputs per GLB is 2.8 
Average number of product terms per GLB is 9.5 
  
Synthesis and partitioning completed successfully 


Physical LAF Reading and Translation

Reading design 'pld'...

Writing output files...

Physical LAF reading and translation completed successfully


Placement and Routing

Reading design 'pld'...

Routing


Writing output files...

Placement and routing completed successfully


Technology Remapping 
  
Reading design 'pld'... 
  
Remapping... 
  
Writing output files... 
  
Writing output lco files... 
  
Technology remapping completed successfully 


Physical LAF Reading and Translation

Reading design 'pld'...

Writing output files...

Physical LAF reading and translation completed successfully


Fusemap Generation

Reading design 'pld'...

Writing output files...

Fusemap generation completed successfully


Simulation LAF Netlist Generation

Reading design 'pld'...

Writing output files...


Information: Global reset (XRESET) is generated to reset all registers



Simulation LAF netlist generation completed successfully


Timing Analyzer 
Reading design pld .... 

Evaluating maximum operating frequency ...
Evaluating setup and hold times...
               
Calculating Tpd Path delays .....

               
         
Timing analyzer completed successfully 



Lattice Verilog netlist writer
writing verilog netlist ...

writing SDF file pld.sdf ...

MSG: Please use SDF file pld.vsf for tools that do not support conditional delays.

writing SDF file pld.vsf ...

Verilog netlist writer completed successfully.



Lattice VHDL netlist writer
Copyright (c) 1993 - 2000 by Lattice Semiconductor Corporation.
All Rights Reserved.

writing vhdl file ...

Please use the file: pld.vho for non-VITAL VHDL timing simulation with max delay.


Please use the file: pld.vhn for non-VITAL VHDL timing simulation with min delay.



Please use the VHDL netlist pld.vto,
the SDF file pld.sdf and Lattice Semiconductor VITAL library for
timing simulation with a VITAL compliant simulator.


writing SDF file pld.sdf ...
VHDL netlist writer completed successfully.


Design process management completed successfully

Done: completed successfully.

Starting: 'C:\ispLEVER_Classic1_7\ispcpld\BIN\synsvf.exe -exe "C:\ispLEVER_Classic1_7\ispvmsystem/ispufw" -prj pld -if pld.jed -j2s -log pld.svl -gui'

Need not generate svf file according to the constraints, exit
Done: completed successfully.
